/* code challenge 1: Which plans are used by which premium members! */

SELECT premium_users.user_id, plans.description 
FROM premium_users
JOIN plans
ON premium_users.membership_plan_id = plans.id;

/* code challenge 2: Let's see the titles of songs that were played by each user */

 SELECT plays.user_id, plays.play_date, songs.title
 FROM plays
 JOIN songs
 ON plays.song_id = songs.id;
 
/* Code Challenge 3: Which users aren't premium users? */
 
 SELECT users.id
 FROM users
 LEFT JOIN premium_users
 ON premium_users.user_id = users.id
 WHERE premium_users.user_id is NULL;
 
/* code challenge 4: Using WITH to create temporary tables */
 
 WITH january AS (
  SELECT *
  FROM plays
  WHERE strftime("%m", play_date) = '01'
),
february AS (
  SELECT *
  FROM plays
  WHERE strftime("%m", play_date) = '02'
)

SELECT january.user_id
FROM january
LEFT JOIN february
ON january.user_id = february.user_id
WHERE february.user_id IS NULL;

/* code challenge 5: CROSS JOIN */

SELECT premium_users.user_id, premium_users.purchase_date, premium_users.cancel_date, months.months
FROM premium_users
CROSS JOIN months;

/* code challenge 6: Active vs. Not Active using CASE (both and + or) and CROSS JOIN */

 SELECT premium_users.user_id,
  months.months,
  CASE
    WHEN (premium_users.purchase_date <=
             months.months)
      AND
      ((premium_users.cancel_date >=
                months.months)
        OR
        premium_users.cancel_date IS NULL)
    THEN 'active'
    ELSE 'not_active'
  END as status
FROM premium_users
CROSS JOIN months;

/* code challenge 7: UNION */

SELECT *
FROM songs
UNION 
SELECT *
FROM bonus_songs;

/* code challenge 8: UNION to create a 'mini data set' */

SELECT '2017-01-01' as month
UNION
SELECT '2017-02-01' as month
UNION
SELECT '2017-03-01' as month;

/* code challenge 9: USING WITH */

WITH play_count AS (SELECT song_id,
   COUNT(*) AS 'times_played'
FROM plays
GROUP BY song_id)
SELECT songs.title, songs.artist, play_count.times_played
FROM songs
JOIN play_count
ON play_count.song_id = songs.id;

